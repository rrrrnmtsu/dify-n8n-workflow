{
  "name": "Dify Webhook Receiver",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "dify-event",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-node",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Difyから受信したデータを処理\nconst data = $input.item.json;\n\nreturn {\n  conversationId: data.conversation_id || 'unknown',\n  userInput: data.user_input || '',\n  agentOutput: data.agent_output || '',\n  timestamp: data.timestamp || new Date().toISOString(),\n  processed: true,\n  processedAt: new Date().toISOString()\n};"
      },
      "id": "process-data",
      "name": "Process Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "operation": "insert",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "list"
        },
        "table": {
          "__rl": true,
          "value": "conversation_logs",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_id": "={{ $json.conversationId }}",
            "user_input": "={{ $json.userInput }}",
            "agent_output": "={{ $json.agentOutput }}",
            "timestamp": "={{ $json.timestamp }}",
            "processed_at": "={{ $json.processedAt }}"
          }
        },
        "options": {}
      },
      "id": "save-to-db",
      "name": "Save to PostgreSQL",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [650, 300],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Dify PostgreSQL"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.userInput }}",
              "operation": "contains",
              "value2": "重要"
            }
          ]
        }
      },
      "id": "check-important",
      "name": "Check Important",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "channel": "dify-alerts",
        "text": "重要な会話が発生しました",
        "attachments": [
          {
            "color": "#ff0000",
            "title": "Conversation Alert",
            "text": "会話ID: {{ $json.conversationId }}\\nユーザー入力: {{ $json.userInput }}\\nAI応答: {{ $json.agentOutput }}"
          }
        ]
      },
      "id": "slack-notification",
      "name": "Slack Notification",
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [1050, 200],
      "credentials": {
        "slackApi": {
          "id": "2",
          "name": "Slack API"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"message\": \"Event processed\", \"conversationId\": $json.conversationId } }}"
      },
      "id": "response",
      "name": "Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1050, 400]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Process Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Data": {
      "main": [
        [
          {
            "node": "Save to PostgreSQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save to PostgreSQL": {
      "main": [
        [
          {
            "node": "Check Important",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Important": {
      "main": [
        [
          {
            "node": "Slack Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slack Notification": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-13T00:00:00.000Z",
  "versionId": "1"
}
